openapi: "3.0.2"
info:
  title: express_api
  version: "1.0"
servers:
  - url: https://localhost:3000
paths:
  /users:
    get:
      tags:
        - "user"
      summary: "ユーザー一覧"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      tags:
        - "user"
      summary: "ユーザー作成"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
                money:
                  type: integer
                hp:
                  type: integer
              required:
                - name
                - password
      responses:
        "200":
          description: OK
    put:
      tags:
        - "user"
      summary: "ユーザー更新"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                password:
                  type: string
                money:
                  type: integer
                hp:
                  type: integer
              required:
                - id
      responses:
        "200":
          description: OK

  /users/{user_id}:
    get:
      tags:
        - "user"
      summary: "ユーザー取得"
      parameters:
        - name: user_id
          in: path
          required: true
          description: "ユーザーID"
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /login:
    post:
      tags:
        - "user"
      summary: "ユーザーログイン"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                password:
                  type: string
              required:
                - name
                - password
      responses:
        "200":
          description: OK

  /users/buy_item:
    post:
      tags:
        - "user"
      summary: "アイテムを買う"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                item_id:
                  type: integer
              required:
                - id
                - item_id
      responses:
        "200":
          description: OK

  /users/use_item:
    post:
      tags:
        - "user"
      summary: "アイテムを使う"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                item_id:
                  type: integer
              required:
                - id
                - item_id
      responses:
        "200":
          description: OK

  /items:
    get:
      tags:
        - "item"
      summary: "アイテム一覧"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Item"
    post:
      tags:
        - "item"
      summary: "アイテム作成"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
      responses:
        "200":
          description: OK
    put:
      tags:
        - "item"
      summary: "アイテム更新"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Item"
      responses:
        "200":
          description: OK
    delete:
      tags:
        - "item"
      summary: "アイテム削除"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
              required:
                - id
      responses:
        "200":
          description: OK
  /itmes/item_id:
    get:
      tags:
        - "item"
      summary: "アイテム取得"
      parameters:
        - name: item_id
          in: path
          required: true
          description: "アイテムID"
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1001
        name:
          type: string
          example: "user01"
        money:
          type: integer
          example: 100
        hp:
          type: integer
          example: 100
      required:
        - id
        - name
        - money
        - hp

    Item:
      type: object
      properties:
        id:
          type: integer
          example: 1001
        name:
          type: string
          example: "item01"
        heal:
          type: integer
          example: 10
        price:
          type: integer
          example: 10
